{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAaeA,GCbA,I,YDGF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,mCAAMN,EAAMI,QAAQG,MAApB,YEJKC,G,MAAY,SAACR,GACtB,OAAO,qBAAKC,UAAU,YAAf,SAGHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EACjDG,SAAUF,MCqCHG,E,kDAlCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbvC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAMjC,IAAD,EAC4BC,KAAKN,MAA9Bb,EADH,EACGA,SAAUU,EADb,EACaA,YACbU,EAAmBpB,EAASqB,QAAO,SAAArB,GAAQ,OAC7CA,EAASH,KAAKyB,cAAcC,SAASb,EAAYY,kBAGrD,OACE,sBAAK9B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAE3D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BRI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0da0051a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <h3> {props.monster.email} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\nimport Card from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList  = (props) => {\r\n    return <div className='card-list'>\r\n  \r\n    {\r\n        props.monsters.map(monster=> (\r\n            <Card key={monster.id} monster={monster}></Card>\r\n            ))\r\n      }\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange}) => (\r\n    <input className='search' type='search' placeholder={placeholder} \r\n        onChange={handleChange}/>\r\n)\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n    // this.handleChange = this.handleChange.bind(this)\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = e => {\n      this.setState({searchField: e.target.value})\n  }\n  render(){\n    const {  monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monsters => \n        monsters.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return( \n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder='Search Monster' handleChange={this.handleChange} ></SearchBox>\n      \n      <CardList monsters={filteredMonsters}>\n      </CardList> \n      </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}